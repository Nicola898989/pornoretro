
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://etwslrnlufpvenffllgd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV0d3Nscm5sdWZwdmVuZmZsbGdkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0NTA1OTUsImV4cCI6MjA2MDAyNjU5NX0.N5STAGhF5bENToszNyrwD3HNI2AFm6VJThDb-JJOEg0";

// Create a custom type that extends the Database type with our additional tables
interface CustomDatabase extends Database {
  public: {
    Tables: {
      retro_cards: Database['public']['Tables']['retro_cards'];
      retrospectives: Database['public']['Tables']['retrospectives'] & {
        Row: Database['public']['Tables']['retrospectives']['Row'] & { is_anonymous?: boolean };
      };
      // Additional tables
      retro_card_votes: {
        Row: {
          id: string;
          card_id: string;
          user_id: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          card_id: string;
          user_id: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          card_id?: string;
          user_id?: string;
          created_at?: string;
        };
        Relationships: [
          {
            foreignKeyName: "retro_card_votes_card_id_fkey";
            columns: ["card_id"];
            isOneToOne: false;
            referencedRelation: "retro_cards";
            referencedColumns: ["id"];
          }
        ];
      };
      retro_comments: {
        Row: {
          id: string;
          card_id: string;
          author: string;
          content: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          card_id: string;
          author: string;
          content: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          card_id?: string;
          author?: string;
          content?: string;
          created_at?: string;
        };
        Relationships: [
          {
            foreignKeyName: "retro_comments_card_id_fkey";
            columns: ["card_id"];
            isOneToOne: false;
            referencedRelation: "retro_cards";
            referencedColumns: ["id"];
          }
        ];
      };
      retro_actions: {
        Row: {
          id: string;
          retro_id: string;
          text: string;
          assignee: string | null;
          completed: boolean;
          linked_card_id: string | null;
          linked_card_content: string | null;
          linked_card_type: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          retro_id: string;
          text: string;
          assignee?: string | null;
          completed?: boolean;
          linked_card_id?: string | null;
          linked_card_content?: string | null;
          linked_card_type?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          retro_id?: string;
          text?: string;
          assignee?: string | null;
          completed?: boolean;
          linked_card_id?: string | null;
          linked_card_content?: string | null;
          linked_card_type?: string | null;
          created_at?: string;
        };
        Relationships: [
          {
            foreignKeyName: "retro_actions_retro_id_fkey";
            columns: ["retro_id"];
            isOneToOne: false;
            referencedRelation: "retrospectives";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "retro_actions_linked_card_id_fkey";
            columns: ["linked_card_id"];
            isOneToOne: false;
            referencedRelation: "retro_cards";
            referencedColumns: ["id"];
          }
        ];
      };
    };
    Views: Database['public']['Views'];
    Functions: Database['public']['Functions'];
    Enums: Database['public']['Enums'];
    CompositeTypes: Database['public']['CompositeTypes'];
  };
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<CustomDatabase>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
