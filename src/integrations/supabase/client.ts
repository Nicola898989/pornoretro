
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://etwslrnlufpvenffllgd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV0d3Nscm5sdWZwdmVuZmZsbGdkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0NTA1OTUsImV4cCI6MjA2MDAyNjU5NX0.N5STAGhF5bENToszNyrwD3HNI2AFm6VJThDb-JJOEg0";

// Create a custom type that extends the Database type with our additional tables
interface CustomDatabase {
  public: {
    Tables: {
      retro_cards: {
        Row: {
          id: string;
          retro_id: string;
          type: string;
          author: string;
          content: string;
          created_at: string;
          group_id?: string;
        };
        Insert: {
          id?: string;
          retro_id: string;
          type: string;
          author: string;
          content: string;
          created_at?: string;
          group_id?: string;
        };
        Update: {
          id?: string;
          retro_id?: string;
          type?: string;
          author?: string;
          content?: string;
          created_at?: string;
          group_id?: string;
        };
        Relationships: [];
      };
      retrospectives: {
        Row: {
          id: string;
          name: string;
          team: string;
          created_by: string;
          created_at: string;
          is_anonymous?: boolean;
        };
        Insert: {
          id: string;
          name: string;
          team: string;
          created_by: string;
          created_at?: string;
          is_anonymous?: boolean;
        };
        Update: {
          id?: string;
          name?: string;
          team?: string;
          created_by?: string;
          created_at?: string;
          is_anonymous?: boolean;
        };
        Relationships: [];
      };
      // Additional tables
      retro_card_votes: {
        Row: {
          id: string;
          card_id: string;
          user_id: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          card_id: string;
          user_id: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          card_id?: string;
          user_id?: string;
          created_at?: string;
        };
        Relationships: [];
      };
      retro_comments: {
        Row: {
          id: string;
          card_id: string;
          author: string;
          content: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          card_id: string;
          author: string;
          content: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          card_id?: string;
          author?: string;
          content?: string;
          created_at?: string;
        };
        Relationships: [];
      };
      retro_actions: {
        Row: {
          id: string;
          retro_id: string;
          text: string;
          assignee: string | null;
          completed: boolean;
          linked_card_id: string | null;
          linked_card_content: string | null;
          linked_card_type: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          retro_id: string;
          text: string;
          assignee?: string | null;
          completed?: boolean;
          linked_card_id?: string | null;
          linked_card_content?: string | null;
          linked_card_type?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          retro_id?: string;
          text?: string;
          assignee?: string | null;
          completed?: boolean;
          linked_card_id?: string | null;
          linked_card_content?: string | null;
          linked_card_type?: string | null;
          created_at?: string;
        };
        Relationships: [];
      };
      retro_card_groups: {
        Row: {
          id: string;
          retro_id: string;
          title: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          retro_id: string;
          title: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          retro_id?: string;
          title?: string;
          created_at?: string;
        };
        Relationships: [];
      };
    };
    Views: Record<string, unknown>;
    Functions: Record<string, unknown>;
    Enums: Record<string, unknown>;
    CompositeTypes: Record<string, unknown>;
  };
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<CustomDatabase>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
